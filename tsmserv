---
- name: Manage TSM Client
  hosts: all
  vars:
    tsm_version: "8.1.13.1"  # Desired TSM version
  tasks:

    # Step 1: Check if TSM client binary exists
    - name: Check if TSM client binary exists
      ansible.builtin.command: "which dsmc"
      register: tsm_check
      failed_when: false

    - name: Set fact for TSM installation status
      ansible.builtin.set_fact:
        tsm_installed: "{{ tsm_check.rc == 0 }}"

    - name: Debug TSM installation status
      ansible.builtin.debug:
        msg: >
          TSM client is {{ 'installed' if tsm_installed else 'not installed' }}.

    # Step 2: Retrieve raw TSM version if installed
    - name: Retrieve raw TSM client version
      ansible.builtin.shell: "dsmc query session | grep -i 'client version'"
      when: tsm_installed
      register: tsm_raw_version
      failed_when: false

    - name: Format TSM client version
      ansible.builtin.shell: >
        echo "{{ tsm_raw_version.stdout.strip() }}" |
        awk -F '[ ,]+' '{print $3"."$5"."$7"."$9}'
      when: tsm_installed
      register: tsm_installed_version
      failed_when: false

    - name: Debug formatted TSM client version
      ansible.builtin.debug:
        msg: >
          Formatted TSM client version is {{ tsm_installed_version.stdout.strip() if tsm_installed else 'unknown' }}.

    # Step 3: Compare installed version with desired version
    - name: Check if installed version is lower than desired version
      ansible.builtin.set_fact:
        tsm_needs_update: "{{ tsm_installed_version.stdout.strip() is version(tsm_version, '<') }}"
      when: tsm_installed

    - name: Debug version comparison
      ansible.builtin.debug:
        msg: >
          Installed TSM version {{ tsm_installed_version.stdout.strip() }} is
          {{ 'lower than' if tsm_needs_update else 'not lower than' }} the desired version {{ tsm_version }}.
      when: tsm_installed

    # Step 4: Execute tasks for installation or update
    - name: Include tasks to install TSM
      ansible.builtin.include_tasks: install.yml
      when: not tsm_installed

    - name: Include tasks to update TSM
      ansible.builtin.include_tasks: update.yml
      when: tsm_needs_update
